{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAddMovie","useState","searchValue","setSearchValue","foundMovie","setFoundMovie","error","setError","isLoading","setIsLoading","firstFound","setFirstFound","onSubmit","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","movieData","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","length","onClick","App","setMovies","find","m","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29cbc5e9.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { ChangeEvent, FormEvent, useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [searchValue, setSearchValue] = useState('');\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [firstFound, setFirstFound] = useState(false);\n\n  const handleFindMovie = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(searchValue)\n      .then((movieData) => {\n        if (movieData.Response === 'True') {\n          const {\n            Title: title,\n            Plot: description,\n            Poster,\n            imdbID: imdbId,\n          } = movieData;\n\n          const imgUrl = Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : Poster;\n\n          const imdbUrl = `https://www.imdb.com/title/${imdbId}`;\n\n          setFoundMovie({\n            title,\n            description,\n            imgUrl,\n            imdbUrl,\n            imdbId,\n          });\n          setFirstFound(true);\n        }\n\n        if (movieData.Response === 'False') {\n          setError(true);\n        }\n\n        setIsLoading(false);\n      });\n  };\n\n  const handleSearchInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(event.target.value);\n    setError(false);\n  };\n\n  const handleAddMovieButton = () => {\n    onAddMovie(foundMovie as Movie);\n    setFoundMovie(null);\n    setSearchValue('');\n    setFirstFound(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleFindMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={searchValue}\n              onChange={handleSearchInput}\n            />\n          </div>\n\n          {error\n          && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!searchValue.length}\n            >\n              {firstFound ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {foundMovie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovieButton}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n      {foundMovie\n      && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={foundMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=f3a0e87c';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const onAddMovie = (movie: Movie) => {\n    const alreadyAdded = movies.find(m => m.imdbId === movie.imdbId);\n\n    if (!alreadyAdded) {\n      setMovies(prev => [...prev, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={onAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}